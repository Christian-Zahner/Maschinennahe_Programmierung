/************************************
 * Filename		 : UE06_Illegal.c	*
 * Created on	 : Nov 14, 2018		*
 * Author		 : Christian Zahner	*
 ************************************/

#include "UART0.h"
#include "support_common.h"  // include peripheral declarations and more; 
#include "uart_support.h"    // universal asynchronous receiver transmitter,
                             // (d.h. die serielle Schnittstelle)
#include "terminal_wrapper.h"

#include "UE06_Illegal.h"

#define MEMOFFSET 0x20000000

/****************************************************************
 * Uebung6: Illegal instruction, testen Sie den Befehl 			*
 * 			einschließlich Verbiegen des zugehörigen Vektors.	*
 ****************************************************************/

void illegal()
{
	char strt[] 	= "\n\rProgramm starten!!!\n\r";
	char exptn[] 	= "\n\rDas war Illegal du Schlingel!!!\n\rAnzeige!!!\n\r";
	char end[] 		= "\n\rProgramm beendet!!!\n\r";
	
	TERM_WriteString("\r\n########################################################################\r\n");
	TERM_WriteString("\r\nUebung06: Illegale Instruction\r\n");
	TERM_WriteString("Testen Sie diesen \"Befehl\" (einschl. Verbiegen des zugehoerigen Vektors)\r\n");
	TERM_WriteString("\r\n########################################################################\r\n");
	
	asm
	{
		BRA Start
		
		myExeptionHandler:
		
			// prints out exptn on uart
			PEA exptn
			JSR TERM_WriteString
			ADDA #4,SP
			
			/********************************************
			 * handle exception here!!					*
			 ********************************************/
			
			// increment PC/A7 by 2 Byte. 2 Byte = length of ILLEGAL cmd
			
			ADD.L #2,4(SP)
			
			/********************************************
			 * this exeption handling does not make 	*
			 * sense in the real world, would be 		*
			 * dangerous								*
			 ********************************************/
			
			// Return from Exeption
			
			RTE
		
		Start:
		
			// prints out strt on uart
			PEA strt
			JSR TERM_WriteString
			ADDA #4,SP
			
			LEA myExeptionHandler,A1
			MOVE.L A1,MEMOFFSET+0x10
			
			ILLEGAL
			
			// prints out end on uart
			PEA end
			JSR TERM_WriteString
			ADDA #4,SP
	}
	
	TERM_WriteString("\r\n########################################################################\r\n");
}



